generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Income        Income[]
  Expenses      Expenses[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model IncomeCategories {
  id     Int      @id @default(autoincrement())
  name   String   @unique @db.VarChar(50)
  Income Income[]
}

model ExpenseCategories {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(50)
  Expenses Expenses[]
}

model Income {
  id          Int              @id @default(autoincrement())
  user_id     String
  amount      Decimal          @db.Decimal(10, 2)
  category_id Int
  date        DateTime         @db.Date
  User        User             @relation(fields: [user_id], references: [id])
  Category    IncomeCategories @relation(fields: [category_id], references: [id])
}

model Expenses {
  id          Int               @id @default(autoincrement())
  user_id     String
  amount      Decimal           @db.Decimal(10, 2)
  category_id Int
  date        DateTime          @db.Date
  User        User              @relation(fields: [user_id], references: [id])
  Category    ExpenseCategories @relation(fields: [category_id], references: [id])
}
